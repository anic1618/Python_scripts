'''
Convert darknet yolov3 model output to annotation files e.g image1.txt
save annotation files in ann folder
'''
'''
Examples of output generated by model:-
Enter Image Path: /workspace/........./1.jpg: Predicted in 12.937000 milli-seconds.
B: 58%	(left_x:  329   top_y:  287   width:   77   height:  154)
T: 84%	(left_x:  483   top_y: 1063   width:  248   height:  130)
Enter Image Path: /workspace/....../10.jpg: Predicted in 12.690000 milli-seconds.
T: 75%	(left_x:  480   top_y: 1071   width:  116   height:   56)
D: 60%	(left_x:  606   top_y:  351   width:  142   height:  981)
B: 81%	(left_x:  845   top_y:  536   width:   96   height:  109)
'''

import os
mpath = os.getcwd()+'/'
result_file_path = mpath + "anil_result.txt"
image_folder_name = mpath + '.....1'
annotation_folder_path = mpath + 'ann/'
print(mpath, result_file_path, image_folder_name, annotation_folder_path,sep='\n')
from PIL import Image
with open(result_file_path,"r") as f:
    data = f.readlines()

# class-name:id 
name = {'T':'1','B':'0','W':'2','D':'3','P':'4','N':'5','G':'6'}
for i in range(0,len(data)):
    parts = data[i].split(':')   
    #print(parts[0])
    if (parts[0] == 'Enter Image Path' and i+1 < len(data) and data[i+1].split(':')[0] != 'Enter Image Path'):
        filepath = parts[1].split('/') 
        filename = filepath[8] 
        print(filename)
        sub_f = open(annotation_folder_path + filename.split('.')[0]+'.txt','w')#annotation file
        #SIZE OF FILE
        im = Image.open(image_folder_name+filename)
        img_width, img_height = im.size
        i += 1
        #if next line has no detect
        if (i < len(data) and data[i].split(':')[0] == 'Enter Image Path'):
            i-=1
            continue
        f=0
        while i < len(data) and data[i].split(':')[0] != 'Enter Image Path':
             subparts = data[i].split(":") #
             if(len(subparts)<6): break
             print('subpart :',subparts)
             left_x = int(subparts[2].split()[0]) 
             top_y = int(subparts[3].split()[0])
             width = int(subparts[4].split()[0])
             height= int(subparts[5].strip().split(')')[0])

            
             c_x = left_x + width/2 
             c_y = top_y + height/2

             st = name[subparts[0]] + " " + str(round(c_x/img_width,6)) + " " + str(round(c_y/img_height,6)) + " " + str(round(width/img_width,6)) + " " + str(round(height/img_height,6))
             print(st)
             if(f==1): st = '\n'+st
             f = 1
             sub_f.write(st)
             
             #'''
             #print(name[subparts[0]],left_x,top_y,width,height,sep=" ")
             i+=1
    
        sub_f.close()

